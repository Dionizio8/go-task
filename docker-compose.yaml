version: '3.4'

services:
  db:
    container_name: mysql.go-task
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: go-task
      MYSQL_USER: go-task-user
      MYSQL_PASSWORD: go-task-pass

  zookeeper:
    container_name: zookeeper.go-task
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafkanet

  kafka:
    image: wurstmeister/kafka
    container_name: kafka.go-task
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'
    networks:
      - kafkanet

  init-kafka:
    container_name: init-kafka.go-task
    image: wurstmeister/kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic notification_events --replication-factor 1 --partitions 1
      "
    networks:
      - kafkanet

  kafka-ui:
    container_name: kafka-ui.go-task
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8580:8080"
    restart: always
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - kafkanet

networks:
  kafkanet:
    name: kafka_go_task_net
